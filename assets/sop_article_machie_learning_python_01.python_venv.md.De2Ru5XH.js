import{j as s,b as i,c as a,aa as t}from"./chunks/framework.Dkh8-idd.js";const y=JSON.parse('{"title":"2. python虚拟环境","description":"","frontmatter":{"title":"2. python虚拟环境","date":"2024-03-18T17:35:31.000Z","tags":["Web","python"],"cover":"https://miro.medium.com/v2/resize:fit:1400/1*ycIMlwgwicqlO6PcFRA-Iw.png","hiddenCover":true},"headers":[],"relativePath":"sop/article/machie_learning/python/01.python_venv.md","filePath":"sop/article/machie_learning/python/01.python_venv.md","lastUpdated":1714943932000}'),e={name:"sop/article/machie_learning/python/01.python_venv.md"},n=t(`<h1 id="_2-python-虚拟环境" tabindex="-1">2. Python 虚拟环境 <a class="header-anchor" href="#_2-python-虚拟环境" aria-label="Permalink to &quot;2. Python 虚拟环境&quot;">​</a></h1><p>要创建一个Python虚拟环境、安装依赖库并导出依赖库清单，你可以按照以下步骤操作：</p><ol><li><strong>创建虚拟环境</strong>：使用 <code>venv</code> 模块创建一个新的虚拟环境。在终端中执行以下命令：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myenv</span></span></code></pre></div><p>这将在当前目录下创建一个名为 <code>myenv</code> 的新的虚拟环境。</p><ol start="2"><li><strong>激活虚拟环境</strong>：在终端中执行以下命令来激活虚拟环境：</li></ol><p>在 macOS/Linux 上：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myenv/bin/activate</span></span></code></pre></div><p>在 Windows 上：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">myenv\\Scripts\\activate</span></span></code></pre></div><p>激活虚拟环境后，你会看到命令行前面出现了 <code>(myenv)</code>，表示虚拟环境已经激活。</p><ol start="3"><li><strong>安装依赖库</strong>：在虚拟环境中使用 <code>pip</code> 命令安装需要的依赖库。例如：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 使用清华源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://pypi.tuna.tsinghua.edu.cn/simple</span></span></code></pre></div><ol start="4"><li><strong>导出依赖库清单</strong>：在虚拟环境中执行以下命令，将当前环境中安装的所有依赖库导出到一个文本文件中：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> freeze</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><p>这会将当前环境中安装的所有依赖库及其版本信息写入到 <code>requirements.txt</code> 文件中。</p><ol start="5"><li><strong>退出虚拟环境</strong>：当你完成了工作后，可以使用以下命令退出虚拟环境：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deactivate</span></span></code></pre></div><p>这样就会退出虚拟环境，返回到全局环境中。</p>`,19),p=[n];function h(l,o,d,c,r,k){return i(),a("div",null,p)}const F=s(e,[["render",h]]);export{y as __pageData,F as default};
