import{j as s,b as i,c as a,aa as e}from"./chunks/framework.Dkh8-idd.js";const u=JSON.parse('{"title":"云服务器部署Vue3项目","description":"","frontmatter":{"title":"云服务器部署Vue3项目","date":"2024-03-21T23:24:31.000Z","tags":["Web","Vue"],"categories":["Web"],"hiddenCover":true,"cover":"https://miro.medium.com/v2/resize:fit:500/1*CPDIH8BWrGipHRJ6o6E2Vw.png"},"headers":[],"relativePath":"sop/article/frontend_dev/web/vue3/03.vue3build.md","filePath":"sop/article/frontend_dev/web/vue3/03.vue3build.md","lastUpdated":1712446931000}'),n={name:"sop/article/frontend_dev/web/vue3/03.vue3build.md"},t=e(`<h1 id="云服务器部署vue3项目" tabindex="-1">云服务器部署Vue3项目 <a class="header-anchor" href="#云服务器部署vue3项目" aria-label="Permalink to &quot;云服务器部署Vue3项目&quot;">​</a></h1><p>要使用Nginx来服务Vue.js 3构建的项目，您需要配置Nginx以将所有请求定向到您的Vue应用的<code>index.html</code>文件，这样单页面应用（SPA）的客户端路由才能正常工作。以下是配置Nginx的一些基本步骤：</p><h2 id="安装nginx" tabindex="-1"><strong>安装Nginx：</strong> <a class="header-anchor" href="#安装nginx" aria-label="Permalink to &quot;**安装Nginx：**&quot;">​</a></h2><p>如果您还没有安装Nginx，请参照<a href="/sop/article/backend_dev/nginx/01.cenos_install_nginx.html">nginx安装</a>步骤进行安装。</p><h2 id="构建vue项目" tabindex="-1"><strong>构建Vue项目：</strong> <a class="header-anchor" href="#构建vue项目" aria-label="Permalink to &quot;**构建Vue项目：**&quot;">​</a></h2><p>在将Vue项目部署到Nginx之前，您需要构建该项目。通常，这可以通过运行以下命令来完成：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>这会将您的Vue项目构建到<code>dist</code>目录（默认情况下）。</p><h2 id="配置nginx" tabindex="-1"><strong>配置Nginx：</strong> <a class="header-anchor" href="#配置nginx" aria-label="Permalink to &quot;**配置Nginx：**&quot;">​</a></h2><p>您需要创建或修改Nginx的站点配置文件。这些文件通常位于<code>/etc/nginx/conf.d/</code>或<code>/etc/nginx/sites-available</code>目录下。例如，创建一个名为<code>vue-app.conf</code>的文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/conf.d/vue-app.conf</span></span></code></pre></div><h2 id="编写nginx配置" tabindex="-1"><strong>编写Nginx配置：</strong> <a class="header-anchor" href="#编写nginx配置" aria-label="Permalink to &quot;**编写Nginx配置：**&quot;">​</a></h2><p>在<code>vue-app.conf</code>文件中，编写以下Nginx配置：</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">80;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">example.com; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 替换为您的域名或IP地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/path/to/your/dist; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Vue项目构建后的输出目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用于SPA路由</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>请确保将<code>/path/to/your/dist</code>替换为您的Vue项目构建输出的实际路径。</p><h2 id="检查nginx配置" tabindex="-1"><strong>检查Nginx配置：</strong> <a class="header-anchor" href="#检查nginx配置" aria-label="Permalink to &quot;**检查Nginx配置：**&quot;">​</a></h2><p>在重新加载Nginx之前，检查您的配置文件是否有语法错误：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span></span></code></pre></div><h2 id="重新加载nginx" tabindex="-1"><strong>重新加载Nginx：</strong> <a class="header-anchor" href="#重新加载nginx" aria-label="Permalink to &quot;**重新加载Nginx：**&quot;">​</a></h2><p>如果配置检查无误，重新加载Nginx以应用新的配置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre></div><h2 id="访问您的vue应用" tabindex="-1"><strong>访问您的Vue应用：</strong> <a class="header-anchor" href="#访问您的vue应用" aria-label="Permalink to &quot;**访问您的Vue应用：**&quot;">​</a></h2><p>在浏览器中访问您的域名或IP地址，您应该能够看到您的Vue应用。 请注意，如果您的Vue应用使用了历史模式路由（<code>mode: &#39;history&#39;</code>），上述配置中的<code>try_files</code>指令是必要的，它确保所有请求都返回<code>index.html</code>，允许Vue Router在客户端处理路由。如果您使用的是哈希模式路由（<code>mode: &#39;hash&#39;</code>），则可能不需要此配置。</p>`,23),h=[t];function l(p,d,o,r,c,k){return i(),a("div",null,h)}const b=s(n,[["render",l]]);export{u as __pageData,b as default};
